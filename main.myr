use std
use sys
use fcgi

impl disposable byte[:] =
	__dispose__ = {b
		std.slfree(b)
	}
;;

const read_loop = {fd
	const res = "Content-Type: text/html\r\n\r\nhello"
	var err

	while true
		var what, content

		match fcgi.read_header(fd)
		| `std.Ok (w, c):
			what = w
			content = c
		| `std.Err e:
			err = e
			goto err
		;;

		auto content

		match what
		| fcgi.BeginRequest:
		| fcgi.Params:
		| fcgi.Stdin:
			break
		| _:
			err = `fcgi.Etype what
			goto err
		;;
	;;

	match fcgi.send_response(fd, res)
	| `std.Ok e:
	| `std.Err e:
		err = e
		goto err
	;;

	std.close(fd)
	-> `std.Ok void

:err
	std.close(fd)
	-> `std.Err err
}

const main = {
	var sock, fd

	sock = std.try(std.announce("unix!/var/www/run/test.sock"))
	sys.chown(sys.cstring("/var/www/run/test.sock"), 67, 67)

	while true
		match std.accept(sock)
		| `std.Ok r: fd = r
		| `std.Err e:
			continue
		;;

		match read_loop(fd)
		| `std.Ok _:
		| `std.Err e:
			match e
			| `fcgi.Eversion v:
				std.put("invalid version: {}\n", v)
			| `fcgi.Eshort:
				std.put("connection interupted\n")
			| `fcgi.Etype t:
				std.put("unknown type: {}\n", t)
			;;
		;;
	;;
}
